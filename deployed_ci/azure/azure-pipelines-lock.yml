trigger: none

variables:
  archive_url: ${ROMP_ARCHIVE_URL}
  command: ${ROMP_COMMAND}
  environments: ${ROMP_ENVIRONMENTS}

jobs:
  - job: generate_matrix
    steps:
      - bash: |
          python deployed_ci/azure/matrix.py

  - template: templates/jobs/get_input_archive.yml
    parameters:
      job: get_input_archive
      archive_url: $(archive_url)

  - job: generic_job_name #job_$(platform)_$(versionSpec)_$(architecture)
    displayName: $[ variables.platform ] $[ variables.versionSpec ] $[ variables.architecture ]
    dependsOn:
      - generate_matrix
      - get_input_archive
    pool:
      vmImage: $[ variables.vmImage ]
    strategy:
      matrix: $[ dependencies.jobDecider.outputs['JobsToRun'] ]
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: $[ variables.versionSpec ]
          architecture: $[ variables.architecture ]
      - template: templates/steps/in_archive_from_artifact.yml
      - bash: |
          python -c 'import sys; print(sys.version); print(sys.platform)'
        displayName: Report Python version
      - bash: |
          eval $(command)
        displayName: Run Command
      - task: CopyFiles@2
        inputs:
          contents: 'requirements/*.txt'
          targetFolder: $(Build.ArtifactStagingDirectory)
      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: $(Build.ArtifactStagingDirectory)
          artifactName: lock_files
